"""
Django settings for Blog_pro project.

Generated by 'django-admin startproject' using Django 2.2a1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""

import os

# 覆盖默认用户系统，自定义用户系统
AUTH_USER_MODEL = 'user.MyUser'





# 该变量表示当前项目根目录
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')_z_r!x_uied-(tz)6d39btx0cxh%3b3s95zvv3a0#cm%%jjsn'

# 
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',                        # 富文本编辑器
    'ckeditor_uploader',               # 富文本编辑器上传文件
    'blog_app1',                       # 博客
    'read_statistics',                 # 阅读计数
    'comment',                         # 评论
    'likes',                           # 点赞
    'user',                            # 自定义app，用户相关
    'notifications',                   # 消息通知
    'my_notifications',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Blog_pro.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Django在寻找HTML模板文件时，会优先寻找设置路径，再搜索各自app下的templates文件夹中的HTML模板文件。（注意：Django会根据代码顺序搜索，如果找到了就停止搜索了）
        # 设置HTML模板文件额外存放目录(如果不设置默认保存在各自app下templates文件夹内)
        'DIRS': [

            # 使用拼接函数，设置为项目根目录下templates文件夹内，项目内所有app都能访问到该文件夹
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            # HTML模板中默认可用的变量
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'user.form_user.login_form',                                    # 添加自定义模板默认变量
            ],
        },
    },
]

WSGI_APPLICATION = 'Blog_pro.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db2.sqlite3'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'Blog_pro',
#         'USER': 'root',
#         'PASSWORD': '923204485',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR,'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

CKEDITOR_UPLOAD_PATH = "upload/"                        # 相对于MEDIA_ROOT路径，用来保存ckedtior上传的图片
CKEDITOR_CONFIGS = {
    'ckeditor_all': {
        'width': 'auto',
        'height': 400,
        'tabSpaces': 4,
        'toolbar': 'all',
        'toolbar_all': [
            [ 'CodeSnippet', 'Source','-','Save','NewPage','DocProps','Preview','Print','-','Templates' ],
            [ 'Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo' ],
            [ 'Find','Replace','-','SelectAll','-','SpellChecker', 'Scayt' ],
            [ 'Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField' ],
            '/',
            [ 'Bold','Italic','Underline','Strike','Subscript','Superscript','-','RemoveFormat' ],
            [ 'NumberedList','BulletedList','-','Outdent','Indent','-','Blockquote','CreateDiv', '-','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock','-','BidiLtr','BidiRtl' ],
            [ 'Link','Unlink','Anchor' ],
            [ 'Image','Flash','Table','HorizontalRule','Smiley','SpecialChar','PageBreak','Iframe' ],
            '/',
            [ 'Styles','Format','Font','FontSize' ] ,
            [ 'TextColor','BGColor' ] ,
            [ 'Maximize', 'ShowBlocks','-','About' ] ,
        ],
        'extraPlugins': ','.join(['codesnippet','uploadimage','prism','widget','lineutils',]),
    },

    'ckeditor_part': {
        'width': 'auto',
        'height': 180,
        'tabSpaces': 4,
        'toolbar': 'part',
        'toolbar_part': [
            ['CodeSnippet', 'Source', 'Preview', '-', 'Undo', 'Redo', '-', 'Find', '-'],
            ['Bold', 'Italic', 'Underline', 'Strike', '-', 'Subscript', 'Superscript', '-'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-'],
            ['Link', 'Unlink', 'Image', 'Table', 'HorizontalRule', 'Smiley', '-'],
            ['Styles', 'Format', 'Font', 'FontSize', 'TextColor', 'BGColor', 'Maximize'],
        ],
        'extraPlugins': ','.join(['codesnippet','uploadimage','prism','widget','lineutils',]),
    }
}

# ------------------------------自定义设置--------------------------------------
PAGINATOR_PAGE_NUMBER = 6                                      # 分页器每页显示多少篇博客


# 数据库缓存
CACHES = {
   'default':{
      'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
      'LOCATION': 'my_cache_table',                            # 缓存数据表
   }
}


# 发送邮件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '728677713@qq.com'
EMAIL_HOST_PASSWORD = 'gcxvddpkcwpibfjf'
EMAIL_FROM = EMAIL_HOST_USER
EMAIL_USE_TLS = False
EMAIL_USE_SSL = False


# QQ第三方登录参数
QQ_APP_ID = '101775316'
QQ_APP_KEY = 'e0513fe204ff5b568eb6e23e608488b8'
QQ_URL = 'http://rxcdsa.top/user/login_by_qq'


# Notifications使用JSONField字段开启功能
DJANGO_NOTIFICATIONS_CONFIG = {
    'USE_JSONFIELD':True,
}